{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ServiceNow DevOps Tool integration Template Guide to create a tool integration using ServiceNow DevOps Tool Integrations This project has a sample tool template to walk thorough different integrations Creating an Orchestration tool integration Follow orchestration.md","title":"ServiceNow DevOps Tool integration Template"},{"location":"#servicenow-devops-tool-integration-template","text":"Guide to create a tool integration using ServiceNow DevOps Tool Integrations This project has a sample tool template to walk thorough different integrations","title":"ServiceNow DevOps Tool integration Template"},{"location":"#creating-an-orchestration-tool-integration","text":"Follow orchestration.md","title":"Creating an Orchestration tool integration"},{"location":"Orchestration/","text":"Create a Orchestration Tool Integration Create new Tool integration Create a new tool integration under DevOps --> Integrations --> Tool Integrations Create Tool integration record sn_devops_tool_integration Create Tool Integration Capability sn_devops_tool_capability_mapping Capability as \"Orchestration\" Create Tool Integration Capabilities sn_devops_integration_capability Connect: Triggered when tool is created to check the provided url and credentials are correct Validate: Validate to be used to check the credentials and url provided are correct Discovery : Pulls information about the pipelines that are configured Notification : Process inbound event webhooks that are sent to ServiceNow instance All these needs to be included with a subflow which and process the provided information. See the existing flows for the right inputs and required responses Connect and Validate Connect Connect Subflow output : Connected (Boolean ): Return true/false Validatee response (String): in JSON format js { \"status\":true, \"statusCode\":200, \"infoMsg\":\"Devops tool is connected.\", \"errorMsg\":\"\", \"aliasId\":fd_data.subflow_inputs.aliasid } Discover discoverPayload (String): in JSON Format array of pipelines { \"pipelines\" : [ { \"name\" : \"pipelineName\", \"url\" : \"Pipeine Url\", \"projectName\" : \"\", \"id\" : \"piplineId\", } ] } Handel Inbound Events notification Refer payload for different responses for different events. Subflow for Notification capability is not needed, if the payload maches the transformation payload. Payload References for Notification Events Pipeline Stage Start Event POST: \"https://myinstance.service-now.com/api/sn_devops/v1/devops/tool/Orchestration?toolId= + pipelineInfo.tool.sys_id\" { \"taskExecution\": { \"toolId\": pipeline.tool.sys_id, \"buildNumber\": pipeline.buildNumber, \"nativeId\": pipeline.buildNumber, \"name\": stage.name + \"#\" + pipeline.buildNumber, \"id\": stage.name + \"#\" + pipeline.buildNumber, \"url\": pipeline.pipeline_url + \"/\" + stage.name + \"/#\" + pipeline.buildNumber, \"isMultiBranch\": \"false\", \"branchName\": \"main\", \"pipelineExecutionUrl\": pipeline.pipeline_url + \"/\" + stage.name + \"/\" + pipeline.buildNumber, \"orchestrationTaskUrl\": pipeline.pipeline_url + \"/\" + stage.name + \"/\", \"orchestrationTaskName\": pipeline.orch_pipeline + \"#\" + stage.name, \"result\": \"building\", \"startDateTime\": dateTime, \"upstreamId\": stageNumber > 0 ? previousStage.name + \"#\" + pipeline.buildNumber : \"\", \"upstreamTaskUrl\": stageNumber > 0 ? pipeline.pipeline_url + \"/\" + previousStage.name + \"/#\" + pipeline.buildNumber : \"\", }, \"orchestrationTask\": { \"orchestrationTaskURL\": pipeline.pipeline_url + \"/\" + stage.name + \"/\", \"orchestrationTaskName\": pipeline.orch_pipeline + \"#\" + stage.name, \"branchName\": \"main\", \"toolId\": pipeline.tool.sys_id } } Pipeline Stage End Event POST: https://myinstance.service-now.com/api/sn_devops/v1/devops/tool/Orchestration?toolId= + pipelineInfo.tool.sys_id { \"taskExecution\": { \"toolId\": pipeline.tool.sys_id, \"buildNumber\": pipeline.buildNumber, \"nativeId\": pipeline.buildNumber, \"name\": stage.name + \"#\" + pipeline.buildNumber, \"id\": stage.name + \"#\" + pipeline.buildNumber, \"url\": pipeline.pipeline_url + \"/\" + stage.name + \"/#\" + pipeline.buildNumber, \"isMultiBranch\": \"false\", \"branchName\": \"main\", \"pipelineExecutionUrl\": pipeline.pipeline_url + \"/\" + stage.name + \"/\" + pipeline.buildNumber, \"orchestrationTaskUrl\": pipeline.pipeline_url + \"/\" + stage.name + \"/\", \"orchestrationTaskName\": pipeline.orch_pipeline + \"#\" + stage.name, \"result\": \"successful\", \"startDateTime\": dateTime, \"endDateTime\": dateTime, \"upstreamId\": previousStage.name + \"#\" + pipeline.buildNumber , \"upstreamTaskUrl\": pipeline.pipeline_url + \"/\" + previousStage.name + \"/#\" + pipeline.buildNumber , }, \"orchestrationTask\": { \"orchestrationTaskURL\": pipeline.pipeline_url + \"/\" + stage.name + \"/\", \"orchestrationTaskName\": pipeline.orch_pipeline + \"#\" + stage.name, \"branchName\": \"main\", \"toolId\": pipeline.tool.sys_id } } Artifact Registration for pipeline execution POST: \"api/sn_devops/devops/artifact/registration?orchestrationToolId=\" + pipelineInfo.tool.sys_id, { \"taskExecutionNumber\": pipeline.buildNumber, \"pipelineName\": pipeline.orch_pipeline, \"stageName\": stage.name, \"artifacts\": [ { \"name\": \"tool-artifact\", \"repositoryName\": \"env0-webapp\", \"semanticVersion\": \"1.0.2\", \"version\": \"1.0.2\" } ] } Package Registration for a pipeline execution POST: \"api/sn_devops/devops/package/registration?orchestrationToolId=\"+ pipelineInfo.tool.sys_id, { \"name\": \"tool-tempalte-package\", \"pipelineName\": pipelineInfo.orch_pipeline, \"stageName\": stage.name, \"taskExecutionNumber\": pipelineInfo.buildNumber, \"orchestrationTask\": { \"orchestrationTaskURL\": pipelineInfo.pipeline_url + \"/\" + stage.name + \"/\", \"orchestrationTaskName\": pipelineInfo.orch_pipeline + \"#\" + stage.name, \"branchName\": \"main\", \"toolId\": \"pipelineInfo.tool.sys_id\", }, \"artifacts\":[ { \"pipelineName\" : \"pipelineInfo.orch_pipeline\", \"stageName\" :\"stageName\", \"taskExecutionNumber\" : \"pipelineInfo.buildNumber\", \"semanticVersion\" : \"artifact.semanticVersion in MAJOR.MINOR.PATCH format\", \"version\" : \"artifact.version\" ; } ] } Change Control POST: \"api/sn_devops/devops/orchestration/changeControl?toolId=\" + pipeline.tool.sys_id, { \"toolId\": pipeline.tool.sys_id, \"callbackURL\": \"unique call back url\", \"orchestrationTaskURL\": pipeline.pipeline_url + \"/\" + stage.name + \"/\", \"orchestrationTaskName\": pipeline.orch_pipeline + \"#\" + stage.name, \"orchestrationTaskDetails\": { \"message\": \"task message\", \"triggerType\": \"upstream\", \"taskExecutionURL\": pipeline.pipeline_url + \"/\" + stage.name + \"/#\" + pipeline.buildNumber, \"orchestrationTaskURL\": pipeline.pipeline_url + \"/\" + stage.name + \"/\", \"orchestrationTaskName\": pipeline.orch_pipeline + \"#\" + stage.name, \"branchName\": \"main\", \"upstreamTaskExecutionURL\": pipeline.pipeline_url + \"/\" + previousStage.name + \"/#\" + pipeline.buildNumber , \"toolId\": pipeline.tool.sys_id, } }","title":"Create a Orchestration Tool Integration"},{"location":"Orchestration/#create-a-orchestration-tool-integration","text":"","title":"Create a Orchestration Tool Integration"},{"location":"Orchestration/#create-new-tool-integration","text":"Create a new tool integration under DevOps --> Integrations --> Tool Integrations Create Tool integration record sn_devops_tool_integration Create Tool Integration Capability sn_devops_tool_capability_mapping Capability as \"Orchestration\" Create Tool Integration Capabilities sn_devops_integration_capability Connect: Triggered when tool is created to check the provided url and credentials are correct Validate: Validate to be used to check the credentials and url provided are correct Discovery : Pulls information about the pipelines that are configured Notification : Process inbound event webhooks that are sent to ServiceNow instance All these needs to be included with a subflow which and process the provided information. See the existing flows for the right inputs and required responses","title":"Create new Tool integration"},{"location":"Orchestration/#connect-and-validate","text":"","title":"Connect and Validate"},{"location":"Orchestration/#connect","text":"Connect Subflow output : Connected (Boolean ): Return true/false","title":"Connect"},{"location":"Orchestration/#validatee","text":"response (String): in JSON format js { \"status\":true, \"statusCode\":200, \"infoMsg\":\"Devops tool is connected.\", \"errorMsg\":\"\", \"aliasId\":fd_data.subflow_inputs.aliasid }","title":"Validatee"},{"location":"Orchestration/#discover","text":"discoverPayload (String): in JSON Format array of pipelines { \"pipelines\" : [ { \"name\" : \"pipelineName\", \"url\" : \"Pipeine Url\", \"projectName\" : \"\", \"id\" : \"piplineId\", } ] }","title":"Discover"},{"location":"Orchestration/#handel-inbound-events-notification","text":"Refer payload for different responses for different events. Subflow for Notification capability is not needed, if the payload maches the transformation payload.","title":"Handel Inbound Events notification"},{"location":"Orchestration/#payload-references-for-notification-events","text":"","title":"Payload References for Notification Events"},{"location":"Orchestration/#pipeline-stage-start-event","text":"POST: \"https://myinstance.service-now.com/api/sn_devops/v1/devops/tool/Orchestration?toolId= + pipelineInfo.tool.sys_id\" { \"taskExecution\": { \"toolId\": pipeline.tool.sys_id, \"buildNumber\": pipeline.buildNumber, \"nativeId\": pipeline.buildNumber, \"name\": stage.name + \"#\" + pipeline.buildNumber, \"id\": stage.name + \"#\" + pipeline.buildNumber, \"url\": pipeline.pipeline_url + \"/\" + stage.name + \"/#\" + pipeline.buildNumber, \"isMultiBranch\": \"false\", \"branchName\": \"main\", \"pipelineExecutionUrl\": pipeline.pipeline_url + \"/\" + stage.name + \"/\" + pipeline.buildNumber, \"orchestrationTaskUrl\": pipeline.pipeline_url + \"/\" + stage.name + \"/\", \"orchestrationTaskName\": pipeline.orch_pipeline + \"#\" + stage.name, \"result\": \"building\", \"startDateTime\": dateTime, \"upstreamId\": stageNumber > 0 ? previousStage.name + \"#\" + pipeline.buildNumber : \"\", \"upstreamTaskUrl\": stageNumber > 0 ? pipeline.pipeline_url + \"/\" + previousStage.name + \"/#\" + pipeline.buildNumber : \"\", }, \"orchestrationTask\": { \"orchestrationTaskURL\": pipeline.pipeline_url + \"/\" + stage.name + \"/\", \"orchestrationTaskName\": pipeline.orch_pipeline + \"#\" + stage.name, \"branchName\": \"main\", \"toolId\": pipeline.tool.sys_id } }","title":"Pipeline Stage Start Event"},{"location":"Orchestration/#pipeline-stage-end-event","text":"POST: https://myinstance.service-now.com/api/sn_devops/v1/devops/tool/Orchestration?toolId= + pipelineInfo.tool.sys_id { \"taskExecution\": { \"toolId\": pipeline.tool.sys_id, \"buildNumber\": pipeline.buildNumber, \"nativeId\": pipeline.buildNumber, \"name\": stage.name + \"#\" + pipeline.buildNumber, \"id\": stage.name + \"#\" + pipeline.buildNumber, \"url\": pipeline.pipeline_url + \"/\" + stage.name + \"/#\" + pipeline.buildNumber, \"isMultiBranch\": \"false\", \"branchName\": \"main\", \"pipelineExecutionUrl\": pipeline.pipeline_url + \"/\" + stage.name + \"/\" + pipeline.buildNumber, \"orchestrationTaskUrl\": pipeline.pipeline_url + \"/\" + stage.name + \"/\", \"orchestrationTaskName\": pipeline.orch_pipeline + \"#\" + stage.name, \"result\": \"successful\", \"startDateTime\": dateTime, \"endDateTime\": dateTime, \"upstreamId\": previousStage.name + \"#\" + pipeline.buildNumber , \"upstreamTaskUrl\": pipeline.pipeline_url + \"/\" + previousStage.name + \"/#\" + pipeline.buildNumber , }, \"orchestrationTask\": { \"orchestrationTaskURL\": pipeline.pipeline_url + \"/\" + stage.name + \"/\", \"orchestrationTaskName\": pipeline.orch_pipeline + \"#\" + stage.name, \"branchName\": \"main\", \"toolId\": pipeline.tool.sys_id } }","title":"Pipeline Stage End Event"},{"location":"Orchestration/#artifact-registration-for-pipeline-execution","text":"POST: \"api/sn_devops/devops/artifact/registration?orchestrationToolId=\" + pipelineInfo.tool.sys_id, { \"taskExecutionNumber\": pipeline.buildNumber, \"pipelineName\": pipeline.orch_pipeline, \"stageName\": stage.name, \"artifacts\": [ { \"name\": \"tool-artifact\", \"repositoryName\": \"env0-webapp\", \"semanticVersion\": \"1.0.2\", \"version\": \"1.0.2\" } ] }","title":"Artifact Registration for pipeline execution"},{"location":"Orchestration/#package-registration-for-a-pipeline-execution","text":"POST: \"api/sn_devops/devops/package/registration?orchestrationToolId=\"+ pipelineInfo.tool.sys_id, { \"name\": \"tool-tempalte-package\", \"pipelineName\": pipelineInfo.orch_pipeline, \"stageName\": stage.name, \"taskExecutionNumber\": pipelineInfo.buildNumber, \"orchestrationTask\": { \"orchestrationTaskURL\": pipelineInfo.pipeline_url + \"/\" + stage.name + \"/\", \"orchestrationTaskName\": pipelineInfo.orch_pipeline + \"#\" + stage.name, \"branchName\": \"main\", \"toolId\": \"pipelineInfo.tool.sys_id\", }, \"artifacts\":[ { \"pipelineName\" : \"pipelineInfo.orch_pipeline\", \"stageName\" :\"stageName\", \"taskExecutionNumber\" : \"pipelineInfo.buildNumber\", \"semanticVersion\" : \"artifact.semanticVersion in MAJOR.MINOR.PATCH format\", \"version\" : \"artifact.version\" ; } ] }","title":"Package Registration for a pipeline execution"},{"location":"Orchestration/#change-control","text":"POST: \"api/sn_devops/devops/orchestration/changeControl?toolId=\" + pipeline.tool.sys_id, { \"toolId\": pipeline.tool.sys_id, \"callbackURL\": \"unique call back url\", \"orchestrationTaskURL\": pipeline.pipeline_url + \"/\" + stage.name + \"/\", \"orchestrationTaskName\": pipeline.orch_pipeline + \"#\" + stage.name, \"orchestrationTaskDetails\": { \"message\": \"task message\", \"triggerType\": \"upstream\", \"taskExecutionURL\": pipeline.pipeline_url + \"/\" + stage.name + \"/#\" + pipeline.buildNumber, \"orchestrationTaskURL\": pipeline.pipeline_url + \"/\" + stage.name + \"/\", \"orchestrationTaskName\": pipeline.orch_pipeline + \"#\" + stage.name, \"branchName\": \"main\", \"upstreamTaskExecutionURL\": pipeline.pipeline_url + \"/\" + previousStage.name + \"/#\" + pipeline.buildNumber , \"toolId\": pipeline.tool.sys_id, } }","title":"Change Control"},{"location":"ToolTemplateTesting/","text":"Tool-template scoped app To test this, Service Now DevOps Change Velocity needs to be installed Install scoped app Fork this repository to your account Login to ServiceNow Instance Import application from source control Create Devops Tool Navigate to DevOps Tool \"Create New\" Provide a name {example-tool} Tool integraiton \"Tool Template\" Tool url \"tool.example.com\" , credential any dummy crednetials Submit Discover Discover This will create tool pipelines Simulate data Open a pipeline Simulate the pipeline orchestrations Checking the simulation Check Inbound events under DevOps Inbound Events Refresh Steps under pipeline, this should populate new steps Refresh Pipeline Execution, this will show a new pipeline execution Check on \"Pipeline UI\" to see the simulated steps Enabling change Control Open step \"ChangeControl\" Enable Change Control Flag and fill mandatory fields Simulate one more execution on pipeline form Check Change has been created at \"ChangeControl\" Step Open Pipeline UI - Check Artifacts has been created - Check Package has been registered Configuring stages and Change Control","title":"Tool-template scoped app"},{"location":"ToolTemplateTesting/#tool-template-scoped-app","text":"To test this, Service Now DevOps Change Velocity needs to be installed","title":"Tool-template scoped app"},{"location":"ToolTemplateTesting/#install-scoped-app","text":"Fork this repository to your account Login to ServiceNow Instance Import application from source control","title":"Install scoped app"},{"location":"ToolTemplateTesting/#create-devops-tool","text":"Navigate to DevOps Tool \"Create New\" Provide a name {example-tool} Tool integraiton \"Tool Template\" Tool url \"tool.example.com\" , credential any dummy crednetials Submit","title":"Create Devops Tool"},{"location":"ToolTemplateTesting/#discover","text":"Discover This will create tool pipelines","title":"Discover"},{"location":"ToolTemplateTesting/#simulate-data","text":"Open a pipeline Simulate the pipeline orchestrations","title":"Simulate data"},{"location":"ToolTemplateTesting/#checking-the-simulation","text":"Check Inbound events under DevOps Inbound Events Refresh Steps under pipeline, this should populate new steps Refresh Pipeline Execution, this will show a new pipeline execution Check on \"Pipeline UI\" to see the simulated steps","title":"Checking the simulation"},{"location":"ToolTemplateTesting/#enabling-change-control","text":"Open step \"ChangeControl\" Enable Change Control Flag and fill mandatory fields Simulate one more execution on pipeline form Check Change has been created at \"ChangeControl\" Step Open Pipeline UI - Check Artifacts has been created - Check Package has been registered","title":"Enabling change Control"},{"location":"ToolTemplateTesting/#configuring-stages-and-change-control","text":"","title":"Configuring stages and Change Control"}]}